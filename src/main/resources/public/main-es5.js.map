{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.module.ts","webpack:///src/app/home/home/home.component.ts","webpack:///src/app/home/home/home.component.html","webpack:///src/app/student/add-student-dialog/add-student-dialog.component.ts","webpack:///src/app/student/add-student-dialog/add-student-dialog.component.html","webpack:///src/app/student/service/student.service.ts","webpack:///src/app/student/student-list/student-list.component.ts","webpack:///src/app/student/student-list/student-list.component.html","webpack:///src/app/student/student.module.ts","webpack:///src/environments/environment.prod.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["map","webpackAsyncContext","req","Promise","resolve","then","__webpack_require__","o","e","Error","code","id","keys","webpackAsyncContextKeys","Object","module","exports","routes","path","loadChildren","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","component","HomeModule","forChild","HomeComponent","AddStudentDialogComponent","formBuilder","studentService","dialogRef","isEdit","configData","_containerInstance","_config","data","maxDate","Date","addStudentForm","group","name","required","rollNo","standard","address","dateOfBirth","phone","controls","setValue","valid","studentDataObj","getRawValue","updateStudent","subscribe","response","close","isRefreshList","error","addStudent","saveStudent","StudentAPIEndPoint","add","api","update","getAll","StudentService","http","studentData","post","put","get","studentId","providedIn","$event","stopPropagation","selection","StudentListComponent","dialog","displayedColumns","dataSource","requestHeader","getAllStudents","numSelected","selected","length","numRows","isAllSelected","clear","forEach","row","select","isSelected","position","console","log","student","studentIdArr","push","componentId","deleteStudent","open","height","width","top","right","beforeClosed","StudentModule","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["var map = {\n\t\"./home/home.module\": \"./src/app/home/home.module.ts\",\n\t\"./student/student.module\": \"./src/app/student/student.module.ts\"\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: './home/home.module#HomeModule'\n},\n{\n  path: 'students',\n  loadChildren: './student/student.module#StudentModule'\n}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'school-app';\n}\n","<mat-toolbar color=\"primary\">\n  <h1>\n    ACVM, Paithan\n  </h1>\n  <button mat-button routerLink=\"/\">Home</button>\n  <button mat-button routerLink=\"/students/student-list\">Students</button>\n  <button mat-button routerLink=\"/\">Teachers</button>\n  <button mat-button routerLink=\"/\">About</button>\n</mat-toolbar>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StudentModule } from './student/student.module';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatToolbarModule, MatIconModule, MatCardModule, MatButtonModule, MatProgressSpinnerModule } from '@angular/material';\nimport { HomeModule } from './home/home.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    StudentModule,\n    HomeModule,\n    NoopAnimationsModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nconst routes: Routes = [\n  {\n      path: '',\n      component: HomeComponent,\n  }\n];\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    NgbModule\n\n  ],\n  exports: [RouterModule]\n})\nexport class HomeModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<div class=\"container\">\n\n  <ngb-carousel>\n    <ng-template ngbSlide>\n      <div class=\"picsum-img-wrapper\">\n        <img src=\"https://images.unsplash.com/photo-1451187580459-43490279c0fa?ixlib=rb-1.2.1&auto=format&fit=crop&w=1352&q=80\" alt=\"Angular Carousel 1\">\n      </div>\n      <div class=\"carousel-caption\">\n        <h3>Title Goes Here</h3>\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n      </div>\n    </ng-template>\n    <ng-template ngbSlide>\n      <div class=\"picsum-img-wrapper\">\n        <img src=\"https://images.unsplash.com/photo-1459909633680-206dc5c67abb?ixlib=rb-1.2.1&auto=format&fit=crop&w=1351&q=80\" alt=\"Angular Carousel 2\">\n      </div>\n      <div class=\"carousel-caption\">\n        <h3>Title Goes Here</h3>\n        <p>Consectetur tortor volutpat pretium.</p>\n      </div>\n    </ng-template>\n  </ngb-carousel>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { StudentService } from '../service/student.service';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n    selector: 'app-add-student-dialog',\n    templateUrl: './add-student-dialog.component.html',\n    styleUrls: ['./add-student-dialog.component.scss'],\n})\nexport class AddStudentDialogComponent implements OnInit {\n    addStudentForm: FormGroup;\n    isEdit = false;\n    configData: any;\n    maxDate: Date;\n\n    constructor(\n      private formBuilder: FormBuilder,\n      private studentService: StudentService,\n      private dialogRef: MatDialogRef<AddStudentDialogComponent>) {\n      this.configData = this.dialogRef._containerInstance._config.data ? this.dialogRef._containerInstance._config.data : null;\n      this.isEdit = this.configData ? true : false;\n      this.maxDate = new Date();\n    }\n\n    ngOnInit(): void {\n        this.addStudentForm = this.formBuilder.group({\n            name: ['', [Validators.required]],\n            rollNo: ['', [Validators.required]],\n            standard: ['', [Validators.required]],\n            address: [''],\n            dateOfBirth: ['', [Validators.required]],\n            phone: ['', [Validators.required]],\n        });\n\n        if (this.configData) {\n          if (this.configData.name) {\n              this.addStudentForm.controls['name'].setValue(this.configData.name);\n              this.addStudentForm.controls['rollNo'].setValue(this.configData.rollNo);\n              this.addStudentForm.controls['standard'].setValue(this.configData.standard);\n              this.addStudentForm.controls['address'].setValue(this.configData.address);\n              this.addStudentForm.controls['dateOfBirth'].setValue(this.configData.dateOfBirth);\n              this.addStudentForm.controls['phone'].setValue(this.configData.phone);\n          }\n      }\n    }\n\n    saveStudent() {\n        if (!this.addStudentForm.valid) {\n            return;\n        }\n\n        // this.isFormSubmit = true;\n        const studentDataObj = this.addStudentForm.getRawValue();\n\n        if (this.isEdit) {\n            studentDataObj.id = this.configData.id;\n            this.studentService.updateStudent(studentDataObj).subscribe(\n                (response) => {\n                    if (response['id']) {\n                        // this.toastr.success('Component updated successfully.', 'Success');\n                        this.dialogRef.close({ isRefreshList: true });\n                    }\n                    // this.isFormSubmit = false;\n                },\n                (error) => {\n                    // this.isFormSubmit = false;\n                    // this.toastr.error('Internal server error.', 'Error');\n                }\n            );\n        } else {\n            this.studentService.addStudent(studentDataObj).subscribe(\n                (response) => {\n                    if (response['id']) {\n                        // this.toastr.success('Component added successfully.', 'Success');\n                        this.dialogRef.close({ isRefreshList: true });\n                    }\n                    // this.isFormSubmit = false;\n                },\n                (error) => {\n                    // this.toastr.error('Internal server error.', 'Error');\n                    // this.isFormSubmit = false;\n                }\n            );\n        }\n    }\n}\n","<h1 mat-dialog-title>Add student</h1>\n<div mat-dialog-content>\n  <form [formGroup]=\"addStudentForm\" (ngSubmit)=\"saveStudent()\" class=\"autocomplete-scroll\" cdkScrollable>\n    <div class=\"row margin\">\n\n      <div class=\"col-sm-12 mt-2\">\n        <mat-form-field>\n          <mat-label>Student Name</mat-label>\n          <input matInput formControlName=\"name\" required/>\n        </mat-form-field>\n      </div>\n\n      <div class=\"col-sm-12 mt-2\">\n        <mat-form-field>\n          <mat-label>Date Of Birth</mat-label>\n          <input matInput [max]=\"maxDate\" [matDatepicker]=\"picker\" formControlName=\"dateOfBirth\" required>\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field>\n      </div>\n\n      <div class=\"col-sm-12 mt-2\">\n        <mat-form-field>\n          <mat-label>Roll Number</mat-label>\n          <input matInput type=\"number\" formControlName=\"rollNo\" required/>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>Standard</mat-label>\n          <input matInput type=\"number\" formControlName=\"standard\" required/>\n        </mat-form-field>\n      </div>\n\n      <div class=\"col-sm-12 mt-2\">\n        <mat-form-field>\n          <mat-label>Phone Number</mat-label>\n          <input matInput formControlName=\"phone\" required/>\n        </mat-form-field>\n      </div>\n\n      <div class=\"col-sm-12 mt-2\">\n        <mat-form-field>\n          <mat-label>Address</mat-label>\n          <input matInput formControlName=\"address\"/>\n        </mat-form-field>\n      </div>\n\n    </div>\n\n    <div class=\"row mx-0 py-4\">\n      <div class=\"btn-wrap d-flex align-items-center\">\n        <button type=\"submit\" mat-flat-button color=\"primary\" class=\"mr-3\" mat-button>\n          <span class=\"px-5 contact-bottom-button\">SAVE</span>\n        </button>\n        <button mat-stroked-button mat-dialog-close color=\"warn\" class=\"ml-4\">\n          <span class=\"px-5 contact-bottom-button\">CANCEL</span>\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\n\nconst StudentAPIEndPoint = {\n  add: environment.api + '/students',\n  update: environment.api + '/students',\n  getAll: environment.api + '/students',\n  delete: environment.api + '/students/'\n};\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StudentService {\n    constructor(private http: HttpClient) {}\n\n    addStudent(studentData) {\n        return this.http.post(StudentAPIEndPoint.add, studentData);\n    }\n\n    updateStudent(studentData) {\n        return this.http.put(StudentAPIEndPoint.update, studentData);\n    }\n\n    getAllStudents() {\n        return this.http.get(StudentAPIEndPoint.getAll);\n    }\n\n    deleteStudent(studentId) {\n        return this.http.delete(StudentAPIEndPoint.delete + studentId);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { HttpHeaders } from '@angular/common/http';\nimport { StudentService } from '../service/student.service';\nimport { AddStudentDialogComponent } from '../add-student-dialog/add-student-dialog.component';\n\n@Component({\n    selector: 'app-student-list',\n    templateUrl: './student-list.component.html',\n    styleUrls: ['./student-list.component.scss'],\n})\nexport class StudentListComponent implements OnInit {\n    displayedColumns: string[] = ['select', 'rollNo', 'name', 'standard', 'address', 'dateOfBirth', 'phone'];\n    dataSource: any[] = [];\n    selection = new SelectionModel<any>(true, []);\n\n    requestHeader = new HttpHeaders({\n        'Content-Type': 'application/json',\n    });\n\n    constructor(private studentService: StudentService, private dialog: MatDialog) {\n      this.getAllStudents();\n    }\n\n    ngOnInit(): void {\n      // this.getAllStudents();\n    }\n\n    /** Whether the number of selected elements matches the total number of rows. */\n    isAllSelected() {\n        const numSelected = this.selection.selected.length;\n        const numRows = this.dataSource.length;\n        return numSelected === numRows;\n    }\n\n    /** Selects all rows if they are not all selected; otherwise clear selection. */\n    masterToggle() {\n        this.isAllSelected() ? this.selection.clear() : this.dataSource.forEach((row) => this.selection.select(row));\n    }\n\n    /** The label for the checkbox on the passed row */\n    checkboxLabel(row?: any): string {\n        if (!row) {\n            return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n        }\n        return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n    }\n\n\n    getAllStudents() {\n      this.selection.clear();\n      this.studentService.getAllStudents().subscribe(\n          (response: any[]) => {\n              if (response) {\n                  this.dataSource = response;\n              } else {\n                this.dataSource = [];\n              }\n          }, (error) => {\n              this.dataSource = [];\n              console.log(error);\n          }\n      );\n  }\n\n    deleteStudent(student?) {\n        let studentIdArr = [];\n        let id='';\n        if (!student) {\n            this.selection.selected.forEach((row) => {\n                studentIdArr.push({ id: row['id'] });\n                id = row['id'];\n            });\n        } else {\n            studentIdArr.push({ componentId: student['id'] });\n        }\n\n        // const options = {\n        //     headers: this.requestHeader,\n        //     body: studentIdArr,\n        // };\n\n        this.studentService.deleteStudent(id).subscribe(\n            (response) => {\n                // this.toastr.success('Component deleted successfully.', 'Success');\n                this.getAllStudents();\n            },\n            (error) => {\n              console.log(error);\n                // this.toastr.error('Internal server error.', 'Error');\n            }\n        );\n    }\n\n    addStudent(student?) {\n      const dialogRef = this.dialog.open(AddStudentDialogComponent, {\n          height: '100vh',\n          width: '25%',\n          position: { top: '0', right: '0' },\n          data: student,\n      });\n\n      dialogRef.beforeClosed().subscribe((data) => {\n          if (data && data.isRefreshList) {\n              this.getAllStudents();\n          }\n      });\n  }\n\n  editStudent(student?) {\n      if (!student) {\n        student = this.selection.selected[0];\n      }\n\n      this.addStudent(student);\n  }\n\n}\n","<div class=\"table-content\">\n  <div class=\"toolbar-wrap\">\n    <div class=\"breadcrump-name-wrap\">\n        <span class=\"d-flex\">\n          <h2 style=\"padding-top: 15px;\"> Students List</h2>\n        </span>\n    </div>\n    <div class=\"btn-wrap\">\n        <button mat-button style=\"margin-top: 15px;\" class=\"pull-right mat-flat-button text-uppercase mat-primary\" (click)=\"addStudent()\">\n            <mat-icon color=\"white\">add</mat-icon>\n            <span>Add Student</span>\n        </button>\n    </div>\n  </div>\n\n  <div class=\"d-flex mb-2\">\n    <button *ngIf=\"selection.selected.length == 1\" mat-button class=\"pr-2 pl-2 menu-btn\" (click)=\"editStudent()\">\n      <mat-icon class=\"mr-1 size-action-icon\">edit</mat-icon>\n      Edit\n    </button>\n    <button *ngIf=\"selection.selected.length == 1\" mat-button class=\"pr-2 pl-2 menu-btn\" (click)=\"deleteStudent()\">\n      <mat-icon class=\"mr-1 size-action-icon\">delete</mat-icon>\n      Delete\n    </button>\n  </div>\n\n  <div>\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\" [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n            [aria-label]=\"checkboxLabel()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <!-- roll_no Column -->\n      <ng-container matColumnDef=\"rollNo\">\n        <th mat-header-cell *matHeaderCellDef> Roll No. </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.rollNo}} </td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef> Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n      </ng-container>\n\n      <!-- standard Column -->\n      <ng-container matColumnDef=\"standard\">\n        <th mat-header-cell *matHeaderCellDef> Standard </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.standard}} </td>\n      </ng-container>\n\n      <!-- address Column -->\n      <ng-container matColumnDef=\"address\">\n        <th mat-header-cell *matHeaderCellDef> Address </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.address}} </td>\n      </ng-container>\n\n      <!-- date_of_birth Column -->\n      <ng-container matColumnDef=\"dateOfBirth\">\n        <th mat-header-cell *matHeaderCellDef> Date Of Birth </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.dateOfBirth}} </td>\n      </ng-container>\n\n      <!-- phone Column -->\n      <ng-container matColumnDef=\"phone\">\n        <th mat-header-cell *matHeaderCellDef> Phone </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.phone}} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"selection.toggle(row)\">\n      </tr>\n    </table>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StudentListComponent } from './student-list/student-list.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatNativeDateModule, MatCheckboxModule, MatTableModule, MatDialogModule, MatSortModule, MatIconModule, MatButtonModule, MatFormFieldModule, MatInputModule, MatProgressBarModule, MatProgressSpinnerModule, MatDatepickerModule } from '@angular/material';\nimport { AddStudentDialogComponent } from './add-student-dialog/add-student-dialog.component';\n\nconst routes: Routes = [\n  {\n      path: 'student-list',\n      component: StudentListComponent,\n  }\n];\n\n@NgModule({\n  declarations: [StudentListComponent, AddStudentDialogComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatDialogModule,\n    MatSortModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n        MatInputModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatDatepickerModule\n\n  ],\n  exports: [RouterModule]\n})\nexport class StudentModule { }\n","export const environment = {\n  production: true,\n  api: 'https://school-management-01.herokuapp.com/school/'\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}